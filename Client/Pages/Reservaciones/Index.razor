

@page "/reservaciones"
<h1>Reservaciones</h1>
<button @onclick="Agregar" class="btn btn-success" style="margin-bottom: 5px;">Agregar</button>
@if(Reservaciones != null)
{
    <table class="table">
        <thead class="table-dark">
            <tr>
                <th>Id</th>
                <th>Cliente</th>
                <th>Fecha</th>
                <th>Hora</th>
                <th>Numero de personas</th>
                <th>Mesa</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var reservacion in Reservaciones)
            {
                <tr>
                    <td>@reservacion.Id</td>
                    <td>@reservacion.Cliente.Nombre</td>
                    <td>@reservacion.Fecha</td>
                    <td>@reservacion.NumeroPersonas</td>
                    <td>@reservacion.MesaId</td>
                    <div class="btn-group" role="group" aria-label="Basic outlined example">
                        <button class="btn btn-outline-warning" @onclick="()=>Editar(reservacion.Id)">Editar</button>
                        <button class="btn btn-outline-danger">Eliminar</button>
                    </div>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Cargando...</p>
}

@code
{
    public List<ReservacionRecord>? Reservaciones { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var response = await reservacionesManager.GetAsync();
        if(response.Succeeded){
            Reservaciones = response.Items.ToList();
        }
    }

    public void Agregar()
    {
        urlHelper.NavigateTo("/rol/crear",false);
    }

    public void Editar(int Id)
    {
        urlHelper.NavigateTo($"/rol/editar/{Id}",false);
    }
}

