@using Client.Managers;
@using Restaurante.Shared.Records;
@using Restaurante.Shared.Wrapper;

@inject IUsuarioRolManager rolesManager;

@page "/roles"
<h1>Roles</h1>
@if(Roles != null)
{
    <table class="table">
        <thead class="table-dark">
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Permiso para crear</th>
                <th>Permiso para editar</th>
                <th>Permiso para eliminar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var rol in Roles)
            {
                <tr>
                    <td>@rol.Id</td>
                    <td>@rol.Nombre</td>
                    <td>@(rol.PermisoParaCrear ? "Si" : "No")</td>
                    <td>@(rol.PermisoParaEditar ? "Si" : "No")</td>
                    <td>@(rol.PermisoParaEliminar ? "Si" : "No")</td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>Cargando...</p>
}

@code
{
    public List<RolUsuarioRecord>? Roles { get; set; }
    protected override async Task OnInitializedAsync()
    {
        var response = await rolesManager.GetAsync();
        if(response.Succeeded){
            Roles = response.Items.ToList();
        }
    }
}

