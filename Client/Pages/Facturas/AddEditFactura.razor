@page "/rol/crear"
@page "/rol/editar/{Id:int}"
<EditForm Model="@Factura" OnValidSubmit="Send">
<h1>@Titulo</h1>
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">
        <label>Fecha:</label>
        <InputDate class="form-control" @bind-Value="Factura.Date"></InputDate>
    </div>
    <div class="form-group">
        <label for="ckbCrear">Productos:</label>
        <InputText id="ckbCrear" @bind-Value="Factura.ProductoId.ToString()"/>
    </div>
    <div class="form-group">
        <label for="ckbCrear">Costo: </label>
        <InputNumber id="ckbCrear" @bind-Value="Factura.CostoTotal"/>
    </div>
    <div class="form-group">
        <label for="ckbCrear">Cajero:</label>
        <InputText id="ckbCrear" @bind-Value="Factura.CajeroId.ToString()"/>
    </div>
    <div class="form-group">
        <label for="ckbCrear">Metodo Pago:</label>
        <InputText id="ckbCrear" @bind-Value="Factura.MetodoPagoId.ToString()"/>
    </div>

    
    
    <button type="submit" class="mt-2 btn btn-success  btn-with-margin">Guardar</button>
</EditForm>

@code
{
[Parameter]
public int Id { get; set; } = 0;

public string Titulo => Id>0? "Editar rol":"Crear rol";

public FacturaUpdateRequest Factura { get; set; } = new FacturaUpdateRequest();

protected override async Task OnInitializedAsync()
{
    if(Id!=0){
        var resultado = await facturasManager.GetByIdAsync(Id);
        if(resultado.Succeeded){
            Factura.Id = resultado.Data.Id;
            Factura.Date = resultado.Data.Date;
            Factura.ProductoId = resultado.Data.ProductoId;
            Factura.CostoTotal = resultado.Data.CostoTotal;
            Factura.CajeroId = resultado.Data.CajeroId;
            Factura.MetodoPagoId = resultado.Data.MetodoPagoId;
            StateHasChanged();
        }
    }
}
        
    public async void Send()
    {
            var resultado = await facturasManager.CreateAsync(Factura);
            if(resultado.Succeeded) urlHelper.NavigateTo("/facturas");
    }
}
